//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CajaBanco.IntegracionClientes {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IntegracionClientes.ClientesSoap")]
    public interface ClientesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearClientes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CrearClientes(string nombre, string dir, string tel, string correo, string apellido, string cedula, string Remitente, int Origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearClientes", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CrearClientesAsync(string nombre, string dir, string tel, string correo, string apellido, string cedula, string Remitente, int Origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EliminarCliente(string cedula, string Remitente, int Origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EliminarClienteAsync(string cedula, string Remitente, int Origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MostrarCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MostrarCliente(string nombre, string Remitente, int Origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MostrarCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> MostrarClienteAsync(string nombre, string Remitente, int Origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearCuentaCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CrearCuentaCliente(int cliente_id, int tipo_id, decimal saldo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearCuentaCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CrearCuentaClienteAsync(int cliente_id, int tipo_id, decimal saldo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MostrarCuentasCliente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CajaBanco.IntegracionClientes.Cuenta[] MostrarCuentasCliente(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MostrarCuentasCliente", ReplyAction="*")]
        System.Threading.Tasks.Task<CajaBanco.IntegracionClientes.Cuenta[]> MostrarCuentasClienteAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPrestamo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CrearPrestamo(int cliente_id, System.DateTime fecha_inicio, decimal cantidad, decimal tasa_interes, int plazo_meses, string Remitente, int Origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearPrestamo", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CrearPrestamoAsync(int cliente_id, System.DateTime fecha_inicio, decimal cantidad, decimal tasa_interes, int plazo_meses, string Remitente, int Origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RevisarContraseña", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RevisarContraseña(string correo, string contraseña, string remitente, int origen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RevisarContraseña", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> RevisarContraseñaAsync(string correo, string contraseña, string remitente, int origen);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Cuenta : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int clienteIdField;
        
        private int empleadoIdField;
        
        private decimal saldoField;
        
        private int tipoIdField;
        
        private string numeroCuentaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ClienteId {
            get {
                return this.clienteIdField;
            }
            set {
                this.clienteIdField = value;
                this.RaisePropertyChanged("ClienteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int EmpleadoId {
            get {
                return this.empleadoIdField;
            }
            set {
                this.empleadoIdField = value;
                this.RaisePropertyChanged("EmpleadoId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal Saldo {
            get {
                return this.saldoField;
            }
            set {
                this.saldoField = value;
                this.RaisePropertyChanged("Saldo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int TipoId {
            get {
                return this.tipoIdField;
            }
            set {
                this.tipoIdField = value;
                this.RaisePropertyChanged("TipoId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string NumeroCuenta {
            get {
                return this.numeroCuentaField;
            }
            set {
                this.numeroCuentaField = value;
                this.RaisePropertyChanged("NumeroCuenta");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClientesSoapChannel : CajaBanco.IntegracionClientes.ClientesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientesSoapClient : System.ServiceModel.ClientBase<CajaBanco.IntegracionClientes.ClientesSoap>, CajaBanco.IntegracionClientes.ClientesSoap {
        
        public ClientesSoapClient() {
        }
        
        public ClientesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CrearClientes(string nombre, string dir, string tel, string correo, string apellido, string cedula, string Remitente, int Origen) {
            return base.Channel.CrearClientes(nombre, dir, tel, correo, apellido, cedula, Remitente, Origen);
        }
        
        public System.Threading.Tasks.Task<bool> CrearClientesAsync(string nombre, string dir, string tel, string correo, string apellido, string cedula, string Remitente, int Origen) {
            return base.Channel.CrearClientesAsync(nombre, dir, tel, correo, apellido, cedula, Remitente, Origen);
        }
        
        public bool EliminarCliente(string cedula, string Remitente, int Origen) {
            return base.Channel.EliminarCliente(cedula, Remitente, Origen);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarClienteAsync(string cedula, string Remitente, int Origen) {
            return base.Channel.EliminarClienteAsync(cedula, Remitente, Origen);
        }
        
        public System.Data.DataSet MostrarCliente(string nombre, string Remitente, int Origen) {
            return base.Channel.MostrarCliente(nombre, Remitente, Origen);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> MostrarClienteAsync(string nombre, string Remitente, int Origen) {
            return base.Channel.MostrarClienteAsync(nombre, Remitente, Origen);
        }
        
        public bool CrearCuentaCliente(int cliente_id, int tipo_id, decimal saldo) {
            return base.Channel.CrearCuentaCliente(cliente_id, tipo_id, saldo);
        }
        
        public System.Threading.Tasks.Task<bool> CrearCuentaClienteAsync(int cliente_id, int tipo_id, decimal saldo) {
            return base.Channel.CrearCuentaClienteAsync(cliente_id, tipo_id, saldo);
        }
        
        public CajaBanco.IntegracionClientes.Cuenta[] MostrarCuentasCliente(string cedula) {
            return base.Channel.MostrarCuentasCliente(cedula);
        }
        
        public System.Threading.Tasks.Task<CajaBanco.IntegracionClientes.Cuenta[]> MostrarCuentasClienteAsync(string cedula) {
            return base.Channel.MostrarCuentasClienteAsync(cedula);
        }
        
        public bool CrearPrestamo(int cliente_id, System.DateTime fecha_inicio, decimal cantidad, decimal tasa_interes, int plazo_meses, string Remitente, int Origen) {
            return base.Channel.CrearPrestamo(cliente_id, fecha_inicio, cantidad, tasa_interes, plazo_meses, Remitente, Origen);
        }
        
        public System.Threading.Tasks.Task<bool> CrearPrestamoAsync(int cliente_id, System.DateTime fecha_inicio, decimal cantidad, decimal tasa_interes, int plazo_meses, string Remitente, int Origen) {
            return base.Channel.CrearPrestamoAsync(cliente_id, fecha_inicio, cantidad, tasa_interes, plazo_meses, Remitente, Origen);
        }
        
        public bool RevisarContraseña(string correo, string contraseña, string remitente, int origen) {
            return base.Channel.RevisarContraseña(correo, contraseña, remitente, origen);
        }
        
        public System.Threading.Tasks.Task<bool> RevisarContraseñaAsync(string correo, string contraseña, string remitente, int origen) {
            return base.Channel.RevisarContraseñaAsync(correo, contraseña, remitente, origen);
        }
    }
}
